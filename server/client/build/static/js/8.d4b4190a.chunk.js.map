{"version":3,"sources":["pages/shop/shop.component.jsx"],"names":["CollectionOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","match","useEffect","className","fallback","exact","path","component"],"mappings":"sHAAA,2DAQMA,EAA8BC,gBAAK,kBAAM,iCACzCC,EAA0BD,gBAAK,kBAAM,iCA8B5BE,sBAAQ,MAJI,SAAAC,GAAQ,MAAM,CACrCC,sBAAuB,kBAAMD,EAASC,mBAG3BF,EA3BG,SAAC,GAAuC,IAArCG,EAAoC,EAApCA,MAAOD,EAA6B,EAA7BA,sBAMxB,OAJAE,qBAAU,WACNF,MACD,CAACA,IAGA,yBAAKG,UAAU,aACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,CACAC,OAAK,EACLC,KAAI,UAAKL,EAAMK,MACfC,UAAWZ,IAEX,kBAAC,IAAD,CACIW,KAAI,UAAKL,EAAMK,KAAX,kBACJC,UAAWV","file":"static/js/8.d4b4190a.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport { fetchCollectionsStart  } from '../../redux/shop/shop.actions';\n\nconst CollectionOverviewContainer = lazy(() => import('../../components/collection-overview/collection-overview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\n\n\nconst  ShopPage = ({ match, fetchCollectionsStart }) =>  {\n    \n    useEffect(() => {\n        fetchCollectionsStart();\n    }, [fetchCollectionsStart]);\n\n    return (\n        <div className='shop-page'>\n            <Suspense fallback={<Spinner />}>\n                <Route \n                exact \n                path={`${match.path}`} \n                component={CollectionOverviewContainer}\n                /> \n                <Route\n                    path={`${match.path}/:collectionId`}  \n                    component={CollectionPageContainer}\n                />\n            </Suspense>          \n        </div>\n    );  \n} \n\nconst mapDispatchToProps = dispatch  => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"],"sourceRoot":""}